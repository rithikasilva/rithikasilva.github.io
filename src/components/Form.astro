---
import Card from "./Card/index.astro";
import Button from "./Button.astro";

interface Props {
  colSpan?: string;
  rowSpan?: string;
}

const { colSpan, rowSpan } = Astro.props;
---

<Card colSpan={colSpan || "md:col-span-4"} rowSpan={rowSpan || "md:row-span-4"} title="Get in Touch">
  <form
    method="post"
    action="https://send.pageclip.co/tRArR4fhX60vYm6kpHS3sPEaApmoAZpV/contact-form"
    class="space-y-4"
  >
    <!-- Name and Email Row -->
    <div class="grid md:grid-cols-2 gap-4">
      <div class="space-y-2">
        <label for="name" class="block text-sm font-medium text-gray-300">
          Name
        </label>
        <input
          type="text"
          id="name"
          name="name"
          placeholder="Your name"
          class="w-full px-4 py-3 bg-darkslate-600 border border-darkslate-400 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-200 focus:border-transparent transition-all duration-200"
          required
        />
      </div>
      
      <div class="space-y-2">
        <label for="email" class="block text-sm font-medium text-gray-300">
          Email
        </label>
        <input
          type="email"
          id="email"
          name="email"
          placeholder="your@email.com"
          class="w-full px-4 py-3 bg-darkslate-600 border border-darkslate-400 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-200 focus:border-transparent transition-all duration-200"
          required
        />
      </div>
    </div>

    <!-- Subject -->
    <div class="space-y-2">
      <label for="subject" class="block text-sm font-medium text-gray-300">
        Subject
      </label>
      <input
        type="text"
        id="subject"
        name="subject"
        placeholder="What's this about?"
        class="w-full px-4 py-3 bg-darkslate-600 border border-darkslate-400 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-200 focus:border-transparent transition-all duration-200"
        required
      />
    </div>

    <!-- Message -->
    <div class="space-y-2">
      <label for="message" class="block text-sm font-medium text-gray-300">
        Message
      </label>
      <textarea
        id="message"
        name="content"
        rows="4"
        placeholder="Tell me what's on your mind..."
        class="w-full px-4 py-3 bg-darkslate-600 border border-darkslate-400 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-200 focus:border-transparent transition-all duration-200 resize-vertical"
        required
      ></textarea>
    </div>

    <!-- Submit Button -->
    <div class="pt-2">
      <Button>
        Send Message
      </Button>
    </div>

    <!-- Success/Error Messages -->
    <div id="form-status" class="hidden">
      <div id="success-message" class="hidden p-4 bg-green-900/50 border border-green-700 rounded-lg">
        <p class="text-green-300 text-sm">✓ Message sent successfully! I'll get back to you soon.</p>
      </div>
      <div id="error-message" class="hidden p-4 bg-red-900/50 border border-red-700 rounded-lg">
        <p class="text-red-300 text-sm">✗ Something went wrong. Please try again or email me directly.</p>
      </div>
    </div>
  </form>

  <script>
    const form = document.querySelector('form');
    const formStatus = document.getElementById('form-status');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');

    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form);
        const submitButton = form.querySelector('button[type="submit"]') || form.querySelector('input[type="submit"]');
        
        // Disable submit button and show loading state
        if (submitButton) {
          submitButton.disabled = true;
          submitButton.textContent = 'Sending...';
        }

        try {
          const response = await fetch(form.action, {
            method: 'POST',
            body: formData
          });

          if (response.ok) {
            // Show success message
            formStatus.classList.remove('hidden');
            successMessage.classList.remove('hidden');
            errorMessage.classList.add('hidden');
            form.reset();
          } else {
            throw new Error('Network response was not ok');
          }
        } catch (error) {
          // Show error message
          formStatus.classList.remove('hidden');
          errorMessage.classList.remove('hidden');
          successMessage.classList.add('hidden');
        } finally {
          // Re-enable submit button
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = 'Send Message';
          }
        }
      });
    }
  </script>
</Card>